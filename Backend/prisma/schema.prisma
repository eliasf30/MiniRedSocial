// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id              Int       @id @default(autoincrement())
  nombre          String
  apellido        String
  email           String    @unique
  password        String
  descripcion     String?
  avatar          String?
  createdAt       DateTime  @default(now())
  isVerified      Boolean   @default(false)
  isAdmin         Boolean   @default(false)
  fechaNacimiento DateTime?
  genero          String?

  verificacionEmail    verificacionEmail[]
  solicitudesEnviadas  SolicitudAmistad[]  @relation("solicitudesEnviadas")
  solicitudesRecibidas SolicitudAmistad[]  @relation("solicitudesRecibidas")
  posts                Post[]
}

model verificacionEmail {
  id        Int      @id @default(autoincrement())
  usuario   Usuario  @relation(fields: [usuarioId], references: [id], onDelete: Cascade)
  usuarioId Int
  token     String   @unique
  createdAt DateTime @default(now())
}

model SolicitudAmistad {
  id         Int             @id @default(autoincrement())
  emisor     Usuario         @relation("solicitudesEnviadas", fields: [emisorId], references: [id])
  emisorId   Int
  receptor   Usuario         @relation("solicitudesRecibidas", fields: [receptorId], references: [id])
  receptorId Int
  estado     EstadoSolicitud @default(PENDIENTE)
  createdAt  DateTime        @default(now())
  updatedAt  DateTime        @updatedAt

  @@unique([emisorId, receptorId])
}

enum EstadoSolicitud {
  PENDIENTE
  ACEPTADA
  RECHAZADA
}

model Post {
  id        Int      @id @default(autoincrement())
  contenido String?
  imagenUrl String?
  createdAt  DateTime @default(now())

  autor   Usuario @relation(fields: [autorId], references: [id])
  autorId Int
}
